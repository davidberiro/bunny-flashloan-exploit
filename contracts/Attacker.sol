//SPDX-License-Identifier: Unlicense
pragma solidity ^0.6.12;

import "@pancakeswap/pancake-swap-lib/contracts/token/BEP20/IBEP20.sol";
import "@pancakeswap/pancake-swap-lib/contracts/access/Ownable.sol";
import "./interfaces/IUniswapV2Callee.sol";
import "./interfaces/IVault.sol";
import "./interfaces/IPancakeRouter02.sol";

contract Attacker is IUniswapV2Callee, Ownable {
  IPancakeRouter02 private constant ROUTER_V1 = IPancakeRouter02(0x05fF2B0DB69458A0750badebc4f9e13aDd608C7F);
  IPancakeRouter02 private constant ROUTER_V2 = IPancakeRouter02(0x10ED43C718714eb63d5aA57B78B54704E256024E);
  // bnb-busd flip vault
  IVault private constant VAULT_ADDRESS = IVault(0xd415e6CaA8af7cc17b7aBD872A42d5F2C90838EA);

  // tokens
  address private constant CAKE = 0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82;
  address private constant BUNNY = 0xC9849E6fdB743d08fAeE3E34dd2D1bc69EA11a51;
  address private constant WBNB = 0xbb4CdB9CBd36B01bD1cBaEBF2De08d9173bc095c;
  address private constant BUSD = 0xe9e7CEA3DedcA5984780Bafc599bD69ADd087D56;
  address private constant USDT = 0x55d398326f99059fF775485246999027B3197955;
  address private constant DAI = 0x1AF3F329e8BE154074D8769D1FFa4eE058B1DBc3;
  address private constant USDC = 0x8AC76a51cc950d9822D68b83fE1Ad97B32Cd580d;
  address private constant VAI = 0x4BD17003473389A42DAF6a0a729f6Fdb328BbBd7;
  address private constant BTCB = 0x7130d2A12B9BCbFAe4f2634d864A1Ee1Ce3Ead9c;
  address private constant ETH = 0x2170Ed0880ac9A755fd29B2688956BD959F933F8;

  // attack logic
  function attack(uint tokenAmount) public onlyOwner {
    // empty params for func call
    bytes memory params;
  }

  // logic after receiving flash loan
  function uniswapV2Call(address sender, uint amount0, uint amount1, bytes calldata data) external override {
    if (data[0] == 0x01) {

    }
    if (data[0] == 0x02) {

    }
    if (data[0] == 0x03) {

    }
    if (data[0] == 0x04) {

    }
    if (data[0] == 0x05) {

    }
    if (data[0] == 0x06) {

    }
  }
}
